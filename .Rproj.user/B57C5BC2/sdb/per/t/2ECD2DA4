{
    "collab_server" : "",
    "contents" : "library(rvest)\nlibrary(magrittr)\nlibrary(dplyr)\nlibrary(tidyr)\n\n# team_mappings with team_id, team_name, team_url  ------------------------\n\nurl_teams <- \"http://stats.ncaa.org/team/inst_team_list?sport_code=MBB&division=1\"\nselector_teams <- \".css-panes a\"\n\nteams_html <- read_html(url_teams)\nteam_nodes <- html_nodes(teams_html, selector_teams)\n \nteam_mapping <- lapply(team_nodes, function(x) {\n  team_name <- xml_text(x)\n  team_link <- xml_attr(x, 'href')\n  team_id <- gsub(\"/team/|/12260\", \"\", team_link)\n  team_link <- paste0(\"http://stats.ncaa.org\", team_link)\n  c(team_id=team_id, team_name=team_name, team_link=team_link)\n  # as.list(c(team_name=team_name, team_link=team_link))\n  })\nteam_mapping <- plyr::ldply(team_mapping)\nteam_mapping <- tbl_df(team_mapping)\n\n\n# schedule_mapping with game_id, home_team_id, away_team_id, date, --------\n# UNC is team_id 457, row 196\n\n\ndoc <- read_html(team_mapping$team_link[i])\n\nschedule_mapping <- doc %>% html_nodes(\".smtext a\") %>% xml_attr(., 'href')\nschedule_mapping <- schedule_mapping[grepl('game', schedule_mapping)]\nschedule_mapping <- gsub(\".*index/|\\\\?.*\", \"\", schedule_mapping)\nschedule_mapping <- cbind(team_id = team_mapping$team_id[i], game_id = schedule_mapping) %>% as.data.frame()\n\n \n# xml_text(a[[1]]) # game_date\n# xml_text(a[[2]], trim = TRUE) # opponent\n# xml_text(a[[3]], trim = TRUE) # score\n# html_nodes(a[[5]], 'a') %>% xml_attr('href') # team link\n# html_nodes(a[[3]], 'a') %>% xml_attr('href') # game link\n\n\ndoc <- read_html(team_mapping$team_link[i])\ndoc <- doc %>% html_nodes('.smtext')\n\n\nschedule_mapping_list <- list()\nfor (i in seq(1, length(doc), by = 3)) { \n  print(i)\n  game_date <- xml_text(doc[[i]])\n  opponent <- xml_text(doc[[i+1]], trim = TRUE)\n  opponent_id <- html_nodes(doc[[i+1]], 'a') %>% xml_attr('href') %>% \n    gsub(\".*team/|/[0-9]{5}$\", \"\", .)\n  game_id <- html_nodes(doc[[i+2]], 'a') %>% xml_attr('href') %>% \n    gsub(\".*index/|\\\\?.*\", \"\", .)\n  score <- xml_text(doc[[i+2]], trim = TRUE)\n  \n  # if (grepl('@', opponent)) {\n  #   away_team_id <- opponent_id\n  #   # home_team_id <- \n}\n\n\nfor (i in 1:length(a)) { \n  print(i)\n  if (i %% 3 == 0) xml_text(a[i])\n  else print(i)\n  }\n\n\n\n# schedule table ----------------------------------------------------------\n\n# my_list <- list()\n# for (i in 1:3) { \nfor (i in 1:nrow(team_mapping)) {\n  cat(\"Start:\", i, \"\\n\")\n  doc <- read_html(team_mapping$team_link[i])\n  doc <- html_table(doc, fill = TRUE)[[2]]\n  names(doc) <- doc[2,] %>% stringr::str_to_lower()\n  doc <- doc[3:nrow(doc),]\n  attr(doc, 'team_id') <- team_mapping$team_id[i]\n  attr(doc, 'team_name') <- team_mapping$team_name[i]\n  my_list[[team_mapping$team_id[i]]] <- doc\n  cat('End:', i, '\\n')\n  save(my_list, file = 'my_list')\n  Sys.sleep(3)\n}\n\nschedule_table <- my_list\n\nschedule_table <- plyr::ldply(schedule_table)\nschedule_table <- tbl_df(schedule_table)\nnames(schedule_table) <- c('team_id', names(schedule_table)[2:4])\n\nschedule_table <- separate(schedule_table, result, c('win_loss', 'other'), sep = \" \", extra = 'merge')\nschedule_table <- separate(schedule_table, other, c('team_score', 'opp_score'), sep = \" \\\\- \", extra = 'drop')\nschedule_table <- separate(schedule_table, opp_score, c('opp_score', 'ot'), sep = \" \", extra = 'merge', fill = 'right')\n\nschedule_table$team_score <- schedule_table$team_score %>% as.numeric()\nschedule_table$opp_score <- schedule_table$opp_score %>% as.numeric()\nschedule_table$margin_of_victory <- schedule_table$team_score - schedule_table$opp_score\n\n\n\ntidyr::separate(schedule_table, result, c('win_loss', 'team_score', 'trash', 'opp_score', 'ot', sep = \" \", fill = 'warn'))\n\nschedule_table <- lapply(schedule_table, function(x) { \n  x <- tidyr::separate(x, result, c('win_loss', 'team_score', 'trash', 'opp_score'), sep = \" \", extra = 'drop')\n  x <- x %>% select(-trash)\n  # x$team_score <- x$team_score %>% as.numeric()\n  # x$opp_score <- x$opp_score %>% as.numeric()\n  # x$margin_of_victory <- x$team_score - x$opp_score\n})\n\nfor (i in team_mapping$team_id) { \n  schedule_table[[i]] <- tidyr::separate(schedule_table[[i]], result, c('win_loss', 'team_score', 'trash', 'opp_score'), sep = \" \", extra = 'drop')\n  schedule_table[[i]] <- schedule_table[[i]] %>% select(-trash)\n  schedule_table[[i]]$team_score <- schedule_table[[i]]$team_score %>% as.numeric()\n  schedule_table[[i]]$opp_score <- schedule_table[[i]]$opp_score %>% as.numeric()\n  schedule_table[[i]]$margin_of_victory <- schedule_table[[i]]$team_score - schedule_table[[i]]$opp_score\n}\n\nlapply(schedule_table, function(x) { \n  attributes(x)\n})\n\nlapply(schedule_table, function(x) { \n  cat(min(x$margin_of_victory), \"\\n\")\n})\n\n\n\n\n\n\n\n\ngsub(\".*@ \", \"\", schedule_table$opponent)\n\ndate <- doc %>% html_nodes('.smtext:nth-child(1)') %>% xml_text()\n\nx <- doc %>% html_nodes('.smtext')\ngame_date <- for (i in seq(1, length(x), 3)) x[i] %>% xml_text() \nx %>% xml_children()\nx %>% xml_text()\n\n# schedule mapping try doc %>% html_nodes('.smtext'), seq start1 by 3 is the loop for info\n\n\n\n\n# player_mapping\ndoc <- read_html(paste0('http://stats.ncaa.org/team/', team_mapping$team_id[i], '/roster/12260'))\nplayer_mapping <- html_table(doc, header = FALSE)[[1]]\nnames(player_mapping) <- player_mapping[2,] %>% stringr::str_to_lower()\nplayer_mapping <- player_mapping[3:nrow(player_mapping),]\nplayer_mapping <- cbind(team_id = team_mapping$team_id[i], player_mapping)\n\n# get box score\ndoc <- read_html(paste0('http://stats.ncaa.org/game/index/', schedule_mapping$game_id[i]))\nhtml_nodes(doc, 'td')\n\nhtml_table(doc)\n\n# get play by play\ndoc <- read_html(paste0('http://stats.ncaa.org/game/play_by_play/', schedule_mapping$game_id[i]))\nplay_by_play <- html_nodes(doc, '.mytbl+ .mytable td')\n\npbp <- xml_text(play_by_play)\nmy_header <- pbp[1:4]\npbp[nchar(pbp) == 0] <- \" \"\n\nmy_list <- list()\nfor (i in seq(5, length(pbp)-4, 4)) {\n  print(i) \n  my_list[[length(my_list)+1]] <- pbp[i:(i+3)]\n}\npbp <- plyr::ldply(my_list)\nnames(pbp) <- my_header\n\n\nleft_join(schedule_table %>% group_by(team_id) %>% summarise(max(team_score)), team_mapping) %>% \n  left_join(kp, .) %>% filter(seed == '1')\n",
    "created" : 1489606238959.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2657104389",
    "id" : "2ECD2DA4",
    "lastKnownWriteTime" : 1484757275,
    "last_content_update" : 1484757275,
    "path" : "~/R/ncaa-basketball/team-mapping.R",
    "project_path" : "team-mapping.R",
    "properties" : {
    },
    "relative_order" : 9,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}